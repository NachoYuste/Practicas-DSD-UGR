/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */

#include "dir.h"
#include <stdio.h>
#include <stdlib.h>


void
calculadora_simple_call(char *host, arg_simple arg, float * resultado){
	CLIENT *clnt;
	float * result;
#ifndef	DEBUG
	clnt = clnt_create (host, CALCULADORA_INTER, SIMPLE, "udp");
	if (clnt == NULL) {
		clnt_pcreateerror (host);
		exit (1);
	}
#endif	/* DEBUG */

	result = calculadora_simple_1(arg, clnt);

	*resultado = *result;
	if (result == (float *) NULL) {
		clnt_perror (clnt, "call failed");
	}

	
#ifndef	DEBUG
	clnt_destroy (clnt);
#endif	 /* DEBUG */
}


calculadora_vectorial_call(char *host, arg_vectorial arg, resp_vectorial * resultado)
{
	CLIENT *clnt;
	resp_vectorial * result;

#ifndef	DEBUG
	clnt = clnt_create (host, CALCULADORA_INTER, SIMPLE, "udp");
	if (clnt == NULL) {
		clnt_pcreateerror (host);
		exit (1);
	}
#endif	/* DEBUG */

	result = calculadora_vectorial_1(arg, clnt);


	if (result == (resp_vectorial *) NULL) {
		clnt_perror (clnt, "call failed");
	}
	
	*resultado = *result;
#ifndef	DEBUG
	clnt_destroy (clnt);
#endif	 /* DEBUG */
}

void interfazSimple(char *host){

	char operacion, salir;
	char porcentaje = '%';
	float val1, val2, resultado;
	arg_simple arg;

	do{
		__fpurge(stdin);

		do{
			printf("Elija operación a realizar: \n");
			
			printf("\t Suma -> +\n\t Resta -> -\n\t Division -> /\n\t Multiplicacion -> x\n\t Modulo(enteros) -> %c\n", porcentaje);
			printf("\t Division entera -> |\n");
			scanf("%c", &operacion);
			printf("\n");
		}while(operacion!='+' && operacion!='-' && operacion!='/' && operacion!='x' && operacion!='%' && operacion!='|');

		float val1, val2;
		printf("Introduzca los dos números con los que desea operar separados por un espacio\n\n");
		scanf("%e %e",&val1, &val2);
		printf("\n");

		arg.op = operacion;
		arg.val1 = val1;
		arg.val2 = val2;

		calculadora_simple_call(host, arg, &resultado);		
		printf("\n%g %c %g = %g\n\n",val1,operacion,val2,resultado);

		__fpurge(stdin);
		printf("Salir: [Si -> S] [No -> Enter]\n");
		scanf("%c", &salir);
		printf("\n");
		
	} while(salir!='S');
}

void interfazVectorial(char *host){

	char operacion, salir;
	float *vec1, *vec2;
	int numElementos;
	arg_vectorial arg;
	resp_vectorial res;

	printf("*****************************************************\n");
	printf("\n*TODAS LAS OPERACIONES SE HACEN ELEMENTO A ELEMENTO*\n");
	printf("***************************************************\n");

	do{
		__fpurge(stdin);

		do{
			printf("Elija operación a realizar: \n");
			
			printf("\t Suma -> +\n\t Resta -> -\n\t Division -> /\n\t Multiplicacion -> x\n");
			scanf("%c", &operacion);
			printf("\n");
		}while(operacion!='+' && operacion!='-' && operacion!='/' && operacion!='x');

		do{
			printf("Introduzca el número de elementos de sus vectores (máximo 50)\n");
			scanf("%d", &numElementos);
			printf("\n");
		}while (numElementos<0 || numElementos > 50);
		

		vec1 = malloc(sizeof(float)*numElementos); 
		vec2 = malloc(sizeof(float)*numElementos); 

		__fpurge(stdin);
		
		printf("Introduzca el primer vector con el que desea operar con los elementos separados por un espacio\n\n");

		for(int i=0; i<numElementos; i++)
			scanf("%g", (vec1+i));
		
		__fpurge(stdin);

		printf("Introduzca el segundo vector con el que desea operar con los elementos separados por un espacio\n\n");

		for(int i=0; i<numElementos; i++)
			scanf("%g", (vec2+i));

		printf("\n");

		

		arg.op = operacion;
		arg.vec1.vec1_len = numElementos;
		arg.vec1.vec1_val = vec1;
		arg.vec2.vec2_len = numElementos;
		arg.vec2.vec2_val = vec2;

		calculadora_vectorial_call(host, arg, &res);

		printf("Resultado: \n");		

		for(int i=0; i<res.res_vec.res_vec_len; i++)
			printf("%g ", res.res_vec.res_vec_val[i]);
		
		printf("\n");

		free(vec1);
		free(vec2);

		__fpurge(stdin);
		printf("Salir: [Si -> S] [No -> Enter]\n");
		scanf("%c", &salir);
		printf("\n");
		
	} while(salir!='S');

}


int
main (int argc, char *argv[])
{
	char *host;

	if (argc < 2) {
		printf ("usage: %s server_host\n", argv[0]);
		exit (1);
	}
	host = argv[1];
	
	char tipocal;
	char salir;
	
	do{	
		
		__fpurge(stdin);
		do{
			printf("¿Que calculadora quieres usar?\n\tSimple -> S\n\tVectorial -> V\n\n");
			scanf("%c", &tipocal);
		}	while(tipocal!='S' && tipocal!='V');

		if(tipocal == 'S')	interfazSimple(host);
		if(tipocal == 'V')	interfazVectorial(host);

		__fpurge(stdin);
		printf("Salir: [Si -> S] [No -> Enter]\n");
		scanf("%c", &salir);
		printf("\n");
		
	} while(salir!='S');

exit (0);
}
